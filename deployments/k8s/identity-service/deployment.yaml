apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-service
  namespace: shopstream
  labels:
    app: identity-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: identity-service
  template:
    metadata:
      labels:
        app: identity-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: identity-service
      containers:
      - name: identity-service
        image: ${ECR_REPOSITORY}/identity-service:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: AWS_REGION
          value: "${AWS_REGION}"
        - name: COGNITO_USER_POOL_ID
          valueFrom:
            secretKeyRef:
              name: identity-service-secrets
              key: cognito-user-pool-id
        - name: COGNITO_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: identity-service-secrets
              key: cognito-client-id
        - name: USERS_TABLE_NAME
          value: "shopstream-${ENVIRONMENT}-users"
        - name: SESSIONS_TABLE_NAME
          value: "shopstream-${ENVIRONMENT}-sessions"
        - name: BLOCKED_TOKENS_TABLE_NAME
          value: "shopstream-${ENVIRONMENT}-blocked-tokens"
        - name: ALLOWED_ORIGINS
          value: "${ALLOWED_ORIGINS}"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
---
apiVersion: v1
kind: Service
metadata:
  name: identity-service
  namespace: shopstream
  labels:
    app: identity-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: identity-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: identity-service
  namespace: shopstream
  annotations:
    eks.amazonaws.com/role-arn: ${IRSA_ROLE_ARN}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: identity-service
  namespace: shopstream
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: identity-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: identity-service
  namespace: shopstream
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: identity-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80